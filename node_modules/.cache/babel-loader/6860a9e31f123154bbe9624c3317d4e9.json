{"ast":null,"code":"const isPromise = promise => typeof promise === 'object' && typeof promise.then === 'function';\n\nconst globalCache = [];\n\nfunction shallowEqualArrays(arrA, arrB) {\n  let equal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (a, b) => a === b;\n  if (arrA === arrB) return true;\n  if (!arrA || !arrB) return false;\n  const len = arrA.length;\n  if (arrB.length !== len) return false;\n\n  for (let i = 0; i < len; i++) if (!equal(arrA[i], arrB[i])) return false;\n\n  return true;\n}\n\nfunction query(fn) {\n  let keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let preload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let config = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  // If no keys were given, the function is the key\n  if (keys === null) keys = [fn];\n\n  for (const entry of globalCache) {\n    // Find a match\n    if (shallowEqualArrays(keys, entry.keys, entry.equal)) {\n      // If we're pre-loading and the element is present, just return\n      if (preload) return undefined; // If an error occurred, throw\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'error')) throw entry.error; // If a response was successful, return\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'response')) {\n        if (config.lifespan && config.lifespan > 0) {\n          if (entry.timeout) clearTimeout(entry.timeout);\n          entry.timeout = setTimeout(entry.remove, config.lifespan);\n        }\n\n        return entry.response;\n      } // If the promise is still unresolved, throw\n\n\n      if (!preload) throw entry.promise;\n    }\n  } // The request is new or has changed.\n\n\n  const entry = {\n    keys,\n    equal: config.equal,\n    remove: () => {\n      const index = globalCache.indexOf(entry);\n      if (index !== -1) globalCache.splice(index, 1);\n    },\n    promise: // Execute the promise\n    (isPromise(fn) ? fn : fn(...keys) // When it resolves, store its value\n    ).then(response => {\n      entry.response = response; // Remove the entry in time if a lifespan was given\n\n      if (config.lifespan && config.lifespan > 0) {\n        entry.timeout = setTimeout(entry.remove, config.lifespan);\n      }\n    }) // Store caught errors, they will be thrown in the render-phase to bubble into an error-bound\n    .catch(error => entry.error = error)\n  }; // Register the entry\n\n  globalCache.push(entry); // And throw the promise, this yields control back to React\n\n  if (!preload) throw entry.promise;\n  return undefined;\n}\n\nconst suspend = (fn, keys, config) => query(fn, keys, false, config);\n\nconst preload = (fn, keys, config) => void query(fn, keys, true, config);\n\nconst peek = keys => {\n  var _globalCache$find;\n\n  return (_globalCache$find = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal))) == null ? void 0 : _globalCache$find.response;\n};\n\nconst clear = keys => {\n  if (keys === undefined || keys.length === 0) globalCache.splice(0, globalCache.length);else {\n    const entry = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal));\n    if (entry) entry.remove();\n  }\n};\n\nexport { clear, peek, preload, suspend };","map":{"version":3,"names":["isPromise","promise","then","globalCache","shallowEqualArrays","arrA","arrB","equal","a","b","len","length","i","query","fn","keys","preload","config","entry","undefined","Object","prototype","hasOwnProperty","call","error","lifespan","timeout","clearTimeout","setTimeout","remove","response","index","indexOf","splice","catch","push","suspend","peek","_globalCache$find","find","clear"],"sources":["C:/Users/ayuve/Desktop/Masum/INTERNSHIP/AcreverseProject - Copy/AcreverseProject-master/node_modules/@react-three/fiber/node_modules/suspend-react/index.js"],"sourcesContent":["const isPromise = promise => typeof promise === 'object' && typeof promise.then === 'function';\n\nconst globalCache = [];\n\nfunction shallowEqualArrays(arrA, arrB, equal = (a, b) => a === b) {\n  if (arrA === arrB) return true;\n  if (!arrA || !arrB) return false;\n  const len = arrA.length;\n  if (arrB.length !== len) return false;\n\n  for (let i = 0; i < len; i++) if (!equal(arrA[i], arrB[i])) return false;\n\n  return true;\n}\n\nfunction query(fn, keys = null, preload = false, config = {}) {\n  // If no keys were given, the function is the key\n  if (keys === null) keys = [fn];\n\n  for (const entry of globalCache) {\n    // Find a match\n    if (shallowEqualArrays(keys, entry.keys, entry.equal)) {\n      // If we're pre-loading and the element is present, just return\n      if (preload) return undefined; // If an error occurred, throw\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'error')) throw entry.error; // If a response was successful, return\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'response')) {\n        if (config.lifespan && config.lifespan > 0) {\n          if (entry.timeout) clearTimeout(entry.timeout);\n          entry.timeout = setTimeout(entry.remove, config.lifespan);\n        }\n\n        return entry.response;\n      } // If the promise is still unresolved, throw\n\n\n      if (!preload) throw entry.promise;\n    }\n  } // The request is new or has changed.\n\n\n  const entry = {\n    keys,\n    equal: config.equal,\n    remove: () => {\n      const index = globalCache.indexOf(entry);\n      if (index !== -1) globalCache.splice(index, 1);\n    },\n    promise: // Execute the promise\n    (isPromise(fn) ? fn : fn(...keys) // When it resolves, store its value\n    ).then(response => {\n      entry.response = response; // Remove the entry in time if a lifespan was given\n\n      if (config.lifespan && config.lifespan > 0) {\n        entry.timeout = setTimeout(entry.remove, config.lifespan);\n      }\n    }) // Store caught errors, they will be thrown in the render-phase to bubble into an error-bound\n    .catch(error => entry.error = error)\n  }; // Register the entry\n\n  globalCache.push(entry); // And throw the promise, this yields control back to React\n\n  if (!preload) throw entry.promise;\n  return undefined;\n}\n\nconst suspend = (fn, keys, config) => query(fn, keys, false, config);\n\nconst preload = (fn, keys, config) => void query(fn, keys, true, config);\n\nconst peek = keys => {\n  var _globalCache$find;\n\n  return (_globalCache$find = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal))) == null ? void 0 : _globalCache$find.response;\n};\n\nconst clear = keys => {\n  if (keys === undefined || keys.length === 0) globalCache.splice(0, globalCache.length);else {\n    const entry = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal));\n    if (entry) entry.remove();\n  }\n};\n\nexport { clear, peek, preload, suspend };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}